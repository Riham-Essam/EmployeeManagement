@model IEnumerable<IdentityRole>
@inject IAuthorizationService authService;

@{
	ViewBag.Title = "All Roles";
}

<h1>All Roles</h1>

@if (Model.Any())
{
	<a class="btn btn-primary mb-3" asp-action="CreateRole" asp-controller="Administration" style="width:auto">
		Add New Role
	</a>

	foreach (var role in Model)
	{
		<div class="card mb-3">
			<div class="card-header">
				Role ID : @role.Id
			</div>

			<div class="card-body">
				<h5 class="card-title">
					Role Name : @role.Name
				</h5>
			</div>

			<div class="card-footer">
				<form asp-action="DeleteRole" method="post" asp-controller="Administration" asp-route-id="@role.Id">

					@if ((await authService.AuthorizeAsync(User, "EditRolePolicy")).Succeeded)
					{
						<a asp-action="EditRole" asp-route-id="@role.Id" class="btn btn-warning">Edit</a>
					}

					@if ((await authService.AuthorizeAsync(User, "DeleteRolePolicy")).Succeeded)
					{
						<span id="ConfirmDelete_@role.Id" style="display:none">
							<span>Are you sure you want to delete this role</span>
							<button type="submit" style="width:auto" class="btn btn-danger">Yes</button>
							<a href="#" style="width:auto" class="btn btn-primary"
							   onclick="confirmDelete('@role.Id' , false);
						   event.preventDefault();">No</a>
						</span>

						<span id="Delete_@role.Id">
							<a href="#" class="btn btn-danger" style="width:auto" onclick="confirmDelete('@role.Id' , true);
						   event.preventDefault();">
								Delete
							</a>
						</span>
					}
				</form>
			</div>
		</div>
	}
}
else
{
	<div class="card">

		<div class="card-header">
			No roles created yet
		</div>

		<div class="card-body">
			<h5 class="card-title">
				Use the bottom below to create a role
			</h5>
		</div>

		<div class="card-footer">
			<a asp-action="CreateRole" asp-controller="Administration" class="btn btn-primary" style="width:auto">
				Create Role
			</a>
		</div>
	</div>
}

@section Scripts {
	<script src="~/js/customScript.js"></script>
}